@import '../../assets/styles/global.scss';

$component: #{$prefix}-button;
$variants: 'primary', 'secondary', 'danger_primary', 'ghost', 'tertiary',
  'danger_tertiary';

.#{$component} {
  @apply cursor-pointer font-bold outline-none transition duration-200 ease-linear relative;
  & + & {
    @apply ml-spacing_04;
  }
  &:hover {
    @apply no-underline;
  }
  &:disabled {
    @apply cursor-not-allowed;
  }

  & > .#{$component}-inner {
    @apply inline-flex h-full items-center;
    line-height: 100%;
  }

  &:focus {
    @apply shadow-shadow_focus;
  }
}

// By Sizes(px)
.#{$component}-xl {
  @apply px-spacing_08 h-xl;
  min-width: 120px;
  border-radius: 8px;
  font-size: 18px;

  & .#{$component}-lefticon {
    @apply w-icon_md h-icon_md mr-spacing_04;
  }
  & .#{$component}-righticon {
    @apply w-icon_md h-icon_md ml-spacing_04;
  }

  &.#{$component}-icon {
    @apply w-xl min-w-size_0 p-spacing_0 m-spacing_0;

    svg {
      @apply w-icon_md h-icon_md;
    }
  }
}

.#{$component}-lg {
  @apply px-spacing_06 h-lg;
  min-width: 90px;
  border-radius: 8px;
  font-size: 16px;

  & .#{$component}-lefticon {
    @apply w-icon_md h-icon_md mr-spacing_04;
  }
  & .#{$component}-righticon {
    @apply w-icon_md h-icon_md ml-spacing_04;
  }

  &.#{$component}-icon {
    @apply w-lg min-w-size_0 p-spacing_0 m-spacing_0;

    svg {
      @apply w-icon_md h-icon_md;
    }
  }
}

.#{$component}-md {
  @apply px-spacing_05 h-md;
  min-width: 80px;
  &[data-width] {
    min-width: 0px;
  }
  border-radius: 8px;
  font-size: 14px;

  & .#{$component}-lefticon {
    @apply w-icon_sm h-icon_sm mr-spacing_03;
  }
  & .#{$component}-righticon {
    @apply w-icon_sm h-icon_sm ml-spacing_03;
  }

  &.#{$component}-icon {
    @apply w-md min-w-size_0 p-spacing_0 m-spacing_0;

    svg {
      @apply w-icon_sm h-icon_sm;
    }
  }
}

.#{$component}-sm {
  @apply px-spacing_04 h-sm;
  min-width: 56px;
  border-radius: 6px;
  font-size: 13px;

  & + & {
    margin-left: 4px;
  }

  & .#{$component}-lefticon {
    @apply w-icon_xs h-icon_xs mr-spacing_02;
  }
  & .#{$component}-righticon {
    @apply w-icon_xs h-icon_xs ml-spacing_02;
  }

  &.#{$component}-icon {
    @apply w-sm min-w-size_0 p-spacing_0 m-spacing_0;

    svg {
      @apply w-icon_xs h-icon_xs;
    }
  }
}

// By Sizes(rem)
.#{$component}-responsive-xl {
  @apply h-size_r08;
}

.#{$component}-responsive-lg {
  @apply h-size_r06;
}

.#{$component}-responsive-md {
  @apply h-size_r05;
}

.#{$component}-responsive-sm {
  @apply px-spacing_04 h-size_r04;
}

// By variant
.#{$component}-primary {
  @apply bg-button_primary text-text_inverse;

  svg {
    @apply fill-background;
  }

  &:hover {
    @apply shadow-shadow_hover;
  }

  &:active {
    @apply shadow-shadow_active;
  }

  &:disabled {
    @apply bg-button_disabled text-text_disabled;
    box-shadow: none;
  }
}

.#{$component}-secondary {
  @apply bg-button_secondary text-text_01;

  &:hover {
    @apply shadow-shadow_hover;
  }
  &:active {
    @apply shadow-shadow_active;
  }
  &:disabled {
    @apply bg-button_disabled text-text_disabled;
    box-shadow: none;
  }
}

.#{$component}-tertiary {
  @apply text-text_accent border border-button_primary;
  svg {
    @apply fill-primary;
  }
  &:hover {
    @apply bg-hover_tertiary_button text-text_inverse;

    svg {
      @apply fill-background;
    }
  }
  &:active {
    @apply bg-active_tertiary_button border-active_tertiary_button text-text_inverse;

    svg {
      @apply fill-background;
    }
  }
  &:disabled {
    @apply bg-button_disabled text-text_disabled border-none;
    box-shadow: none;
  }
}

.#{$component}-ghost {
  @apply text-text_01;
  svg {
    @apply fill-icon01;
  }
  &:hover {
    @apply shadow-shadow_hover;
  }
  &:active {
    @apply shadow-shadow_active;
  }
  &:disabled {
    @apply bg-button_disabled text-text_disabled;
    box-shadow: none;
  }

  &.#{$component}-ghost-important {
    @apply text-text_info;
    svg {
      @apply fill-primary;
    }
  }

  &.#{$component}-ghost-danger {
    @apply text-danger;
    svg {
      @apply fill-danger;
    }
  }
}

.#{$component}-danger_primary {
  @apply bg-danger text-text_inverse;

  svg {
    @apply fill-background;
  }
  &:hover {
    @apply shadow-shadow_hover;
  }
  &:active {
    @apply shadow-shadow_active;
  }
  &:disabled {
    @apply bg-button_disabled text-text_disabled;
    box-shadow: none;
  }
}

.#{$component}-danger_tertiary {
  @apply text-danger border border-danger;
  svg {
    @apply fill-danger;
  }
  &:hover {
    @apply bg-hover_danger_tertiary_button text-text_inverse;

    svg {
      @apply fill-background;
    }
  }
  &:active {
    @apply bg-active_danger_tertiary_button border-active_danger_tertiary_button text-text_inverse;

    svg {
      @apply fill-background;
    }
  }
  &:disabled {
    @apply bg-button_disabled text-text_disabled border-none;
    box-shadow: none;
  }
}

%loading-spinner {
  position: absolute;
  content: '';
  top: 50%;
  left: 50%;
  margin: -0.85em 0 0 -0.85em; // top50%, left50일때 요소를 중앙에 위치시키기 위함. -width/2 0 0 -height/2
  width: 1.7em;
  height: 1.7em;
  border-radius: 50%;
  border: 0.2em solid rgba(36, 41, 45, 0.18);
}

@each $variant in $variants {
  .#{$component}-#{$variant}-loading {
    color: transparent !important;
    &:before {
      //spinner background
      @extend %loading-spinner;
    }
    &:after {
      //moving spinner
      @extend %loading-spinner;
      border-style: solid;
      border-width: 0.2em;
      box-shadow: 0 0 0 1px transparent;
      animation: button-spin 0.6s linear;
      animation-iteration-count: infinite;
      @if (
        $variant ==
          'primary' or
          $variant ==
          'danger_primary' or
          $variant ==
          'secondary'
      ) {
        border-color: #fff transparent transparent;
      } @else {
        border-color: grey transparent transparent;
      }
    }
  }
}

@keyframes button-spin {
  from {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  to {
    -webkit-transform: rotate(359deg);
    transform: rotate(359deg);
    -webkit-transform: rotate(359deg);
    transform: rotate(359deg);
  }
}
