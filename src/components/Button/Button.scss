@import '../../assets/styles/global.scss';

$component: #{$prefix}-button;
$variants: 'primary', 'secondary', 'danger_primary', 'ghost', 'tertiary',
  'danger_tertiary';

.#{$component} {
  @apply bg-color_background cursor-pointer font-bold outline-none transition duration-200 ease-linear relative;
  &:hover {
    @apply no-underline;
  }
  &:disabled {
    @apply cursor-not-allowed;
  }

  & > .#{$component}-inner {
    @apply inline-flex h-full items-center;
    line-height: 100%;
  }

  &:focus-visible {
    @apply shadow-shadow_focus;
  }
}

// By Sizes(px)
.#{$component}-xl {
  @apply px-spacing_12 h-xl;
  min-width: 120px;
  border-radius: 8px;
  font-size: 18px;

  & .#{$component}-lefticon {
    @apply w-icon_md h-icon_md mr-spacing_04;
  }
  & .#{$component}-righticon {
    @apply w-icon_md h-icon_md ml-spacing_04;
  }

  &.#{$component}-icon {
    @apply w-xl min-w-size_00 p-spacing_00 m-spacing_00;

    svg {
      @apply w-icon_md h-icon_md;
    }
  }
}

.#{$component}-lg {
  @apply px-spacing_08 h-lg;
  min-width: 90px;
  border-radius: 8px;
  font-size: 16px;

  & .#{$component}-lefticon {
    @apply w-icon_md h-icon_md mr-spacing_04;
  }
  & .#{$component}-righticon {
    @apply w-icon_md h-icon_md ml-spacing_04;
  }

  &.#{$component}-icon {
    @apply w-lg min-w-size_00 p-spacing_00 m-spacing_00;

    svg {
      @apply w-icon_md h-icon_md;
    }
  }
}

.#{$component}-md {
  @apply px-spacing_06 h-md;
  min-width: 80px;
  &[data-width] {
    min-width: 0px;
  }
  border-radius: 8px;
  font-size: 14px;

  & .#{$component}-lefticon {
    @apply w-icon_sm h-icon_sm mr-spacing_03;
  }
  & .#{$component}-righticon {
    @apply w-icon_sm h-icon_sm ml-spacing_03;
  }

  &.#{$component}-icon {
    @apply w-md min-w-size_00 p-spacing_00 m-spacing_00;

    svg {
      @apply w-icon_sm h-icon_sm;
    }
  }
}

.#{$component}-sm {
  @apply px-spacing_04 h-sm;
  min-width: 56px;
  border-radius: 6px;
  font-size: 13px;

  & .#{$component}-lefticon {
    @apply w-icon_xs h-icon_xs mr-spacing_02;
  }
  & .#{$component}-righticon {
    @apply w-icon_xs h-icon_xs ml-spacing_02;
  }

  &.#{$component}-icon {
    @apply w-sm min-w-size_00 p-spacing_00 m-spacing_00;

    svg {
      @apply w-icon_xs h-icon_xs;
    }
  }
}

// By Sizes(rem)
.#{$component}-responsive-xl {
  @apply h-size_r28;
}

.#{$component}-responsive-lg {
  @apply h-size_r20;
}

.#{$component}-responsive-md {
  @apply h-size_r16;
}

.#{$component}-responsive-sm {
  @apply px-spacing_04 h-size_r12;
}

// By variant
.#{$component}-primary {
  @apply bg-color_button_primary text-color_text_inverse;

  svg {
    @apply fill-color_background;
  }

  &:hover {
    @apply shadow-shadow_hover;
  }

  &:active {
    @apply shadow-shadow_active;
  }

  &:disabled {
    @apply bg-color_button_disabled text-color_text_disabled;
    box-shadow: none;
  }
}

.#{$component}-secondary {
  @apply bg-color_button_secondary text-color_text_01;

  &:hover {
    @apply shadow-shadow_hover;
  }
  &:active {
    @apply shadow-shadow_active;
  }
  &:disabled {
    @apply bg-color_button_disabled text-color_text_disabled;
    box-shadow: none;
  }
}

.#{$component}-tertiary {
  @apply text-color_text_accent border border-color_button_primary;
  svg {
    @apply fill-color_primary_element;
  }
  &:hover {
    @apply bg-color_hover_tertiary_button text-color_text_inverse;

    svg {
      @apply fill-color_background;
    }
  }
  &:active {
    @apply bg-color_active_tertiary_button border-color_active_tertiary_button text-color_text_inverse;

    svg {
      @apply fill-color_background;
    }
  }
  &:disabled {
    @apply bg-color_button_disabled text-color_text_disabled border-none;
    box-shadow: none;
  }
}

.#{$component}-ghost {
  @apply text-color_text_01;
  svg {
    @apply fill-color_icon_01;
  }
  &:hover {
    @apply shadow-shadow_hover;
  }
  &:active {
    @apply shadow-shadow_active;
  }
  &:disabled {
    @apply bg-color_button_disabled text-color_text_disabled;
    box-shadow: none;
  }

  &.#{$component}-ghost-important {
    @apply text-color_text_info;
    svg {
      @apply fill-color_primary_element;
    }

    &:disabled {
      @apply bg-color_button_disabled text-color_text_disabled;
      box-shadow: none;
    }
  }

  &.#{$component}-ghost-danger {
    @apply text-color_danger;
    svg {
      @apply fill-color_danger;
    }
  }
}

.#{$component}-danger_primary {
  @apply bg-color_danger text-color_text_inverse;

  svg {
    @apply fill-color_background;
  }
  &:hover {
    @apply shadow-shadow_hover;
  }
  &:active {
    @apply shadow-shadow_active;
  }
  &:disabled {
    @apply bg-color_button_disabled text-color_text_disabled;
    box-shadow: none;
  }
}

.#{$component}-danger_tertiary {
  @apply text-color_danger border border-color_danger;
  svg {
    @apply fill-color_danger;
  }
  &:hover {
    @apply bg-color_hover_danger_tertiary_button text-color_text_inverse;

    svg {
      @apply fill-color_background;
    }
  }
  &:active {
    @apply bg-color_active_danger_tertiary_button border-color_active_danger_tertiary_button text-color_text_inverse;

    svg {
      @apply fill-color_background;
    }
  }
  &:disabled {
    @apply bg-color_button_disabled text-color_text_disabled border-none;
    box-shadow: none;
  }
}

%loading-spinner {
  @apply absolute;
  content: '';
  top: 50%;
  left: 50%;
  margin: -0.85em 0 0 -0.85em; // top50%, left50일때 요소를 중앙에 위치시키기 위함. -width/2 0 0 -height/2
  width: 1.7em;
  height: 1.7em;
  border-radius: 50%;
}

@each $variant in $variants {
  $white-wheel: #fff transparent transparent; //layout_01
  $grey-wheel: #535e6a transparent transparent; // layout_emphasize_02

  .#{$component}-#{$variant}-loading {
    color: transparent !important;
    & > span > svg {
      fill: transparent !important;
    }
    &:before {
      //spinner background
      @extend %loading-spinner;
      border: 0.2em solid rgba(36, 41, 45, 0.18);
    }
    &:after {
      //spinner wheel
      @extend %loading-spinner;
      box-shadow: 0 0 0 1px transparent;
      animation: button-spin 0.6s linear;
      animation-iteration-count: infinite;
      border-style: solid;
      border-width: 0.2em;
      @if (
        $variant ==
          'primary' or
          $variant ==
          'danger_primary' or
          $variant ==
          'secondary'
      ) {
        border-color: $white-wheel;
      } @else {
        border-color: $grey-wheel;
      }
    }

    &:hover:after,
    &:active:after {
      @if (
        $variant ==
          'ghost' or
          $variant ==
          'tertiary' or
          $variant ==
          'danger_tertiary'
      ) {
        border-color: $white-wheel;
      }
    }
  }
}

@keyframes button-spin {
  from {
    transform: rotate(0deg);
    transform: rotate(0deg);
  }
  to {
    transform: rotate(359deg);
    transform: rotate(359deg);
  }
}
